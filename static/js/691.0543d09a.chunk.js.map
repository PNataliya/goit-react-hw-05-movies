{"version":3,"file":"static/js/691.0543d09a.chunk.js","mappings":"qPAEaA,EAAeC,EAAAA,GAAAA,IAAU,+CAIzBC,EAAOD,EAAAA,GAAAA,KAAW,mFAKlBE,EAAQF,EAAAA,GAAAA,MAAY,gLAQpBG,EAASH,EAAAA,GAAAA,OAAa,0J,SC4DnC,EAvEe,WACb,OAAwCI,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAaF,EAAaG,IAAI,SACpC,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA0BF,EAAAA,EAAAA,UAASF,GAA0B,IAAG,eAAzDK,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,UAXG,gCAWU,gCAVV,mCAUyC,4DAAoDL,GAE3F,KAAVA,GAKFM,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACJX,EACEW,EAAKC,QAAQC,KAAI,YAAY,MAAQ,CAAEC,GAAjB,EAAFA,GAA2BC,MAAlB,EAALA,MAAqC,IAEjE,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GAIxC,GAAG,CAAChB,IAUJ,OACE,UAACb,EAAY,YACX,UAACE,EAAI,CAAC8B,OAAO,GAAGC,SAVE,SAAAC,GACpBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOxB,MAAMuB,MAC7BtB,EAASsB,GACT7B,EAAgB,CAAEM,MAAOuB,GAE3B,EAI4C,WACtC,SAACjC,EAAK,CAACmC,KAAK,OAAOC,KAAK,QAAQC,aAAc3B,KAC9C,SAACT,EAAM,CAACkC,KAAK,SAAQ,wBAGvB,wBACG3B,EAAOc,KAAI,YAAoB,IAAjBC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MACjB,OACE,yBACE,SAAC,KAAI,CACHc,GAAE,UAAKf,GACPgB,OAAQ,CAAEC,WAAW,SAAD,OAAW9B,IAC/B+B,MAAO,CAAEC,KAAM9B,GAAW,SAEzBY,KANID,EAUb,QAIR,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesStyled = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  height: 25px;\n  margin-bottom: 16px;\n`;\nexport const Input = styled.input`\n  font-size: 16px;\n  margin-right: 5px;\n  border-radius: 2px;\n  border: 1px solid #6161e9;\n  box-shadow: 0px 4px 5px 0px rgba(179, 165, 165, 0.5);\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  border-radius: 2px;\n  border: 1px solid #6161e9;\n  box-shadow: 0px 4px 5px 0px rgba(179, 165, 165, 0.5);\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MoviesStyled, Input, Button, Form } from './Movies.styled';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '62a0747aac137915f35199437084137e';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(queryParam ? queryParam : '');\n  const location = useLocation();\n\n  useEffect(() => {\n    const url = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n\n    if (query === '') {\n      return;\n    }\n\n    function fetchMovie() {\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setMovies(\n            data.results.map(({ id, title }) => ({ id: id, title: title }))\n          );\n        })\n        .catch(error => console.log(error));\n    }\n\n    fetchMovie();\n  }, [query]);\n\n  const handleSubbmit = e => {\n    e.preventDefault();\n    const value = e.target.query.value;\n    setQuery(value);\n    setSearchParams({ query: value });\n    // e.target.query.value = \"\";\n  };\n\n  return (\n    <MoviesStyled>\n      <Form action=\"\" onSubmit={handleSubbmit}>\n        <Input type=\"text\" name=\"query\" defaultValue={query} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n\n      <ul>\n        {movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`${id}`}\n                search={{ querySerch: `query=${query}` }}\n                state={{ from: location }}\n              >\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </MoviesStyled>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Movies;\n"],"names":["MoviesStyled","styled","Form","Input","Button","useSearchParams","searchParams","setSearchParams","queryParam","get","useState","movies","setMovies","query","setQuery","location","useLocation","useEffect","url","fetch","then","response","json","data","results","map","id","title","catch","error","console","log","action","onSubmit","e","preventDefault","value","target","type","name","defaultValue","to","search","querySerch","state","from"],"sourceRoot":""}